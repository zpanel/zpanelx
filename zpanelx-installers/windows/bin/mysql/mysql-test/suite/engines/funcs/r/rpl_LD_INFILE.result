stop slave;
drop table if exists t1,t2,t3,t4,t5,t6,t7,t8,t9;
reset master;
reset slave;
drop table if exists t1,t2,t3,t4,t5,t6,t7,t8,t9;
start slave;
DROP TABLE IF EXISTS test.t1;
CREATE TABLE test.t1 (a VARCHAR(255), PRIMARY KEY(a));
LOAD DATA INFILE '../../std_data/words2.dat' INTO TABLE test.t1;
DELETE FROM test.t1 WHERE a = 'abashed';
DELETE FROM test.t1;
LOAD DATA INFILE '../../std_data/words2.dat' INTO TABLE test.t1;
SELECT * FROM test.t1 ORDER BY a DESC;
a
aberration
aberrant
Abernathy
Aberdeen
Abelson
Abelian
Abel
abed
Abe
abducts
abductors
abductor
abductions
abduction
abducted
abduct
abdominal
abdomens
abdomen
Abby
abbreviations
abbreviation
abbreviating
abbreviates
abbreviated
abbreviate
Abbott
abbots
abbot
abbeys
abbey
abbe
Abba
abating
abates
abater
abatements
abatement
abated
abate
abasing
abashing
abashes
abashed
abash
abases
abasements
abasement
abased
abase
SELECT * FROM test.t1 ORDER BY a DESC;
a
aberration
aberrant
Abernathy
Aberdeen
Abelson
Abelian
Abel
abed
Abe
abducts
abductors
abductor
abductions
abduction
abducted
abduct
abdominal
abdomens
abdomen
Abby
abbreviations
abbreviation
abbreviating
abbreviates
abbreviated
abbreviate
Abbott
abbots
abbot
abbeys
abbey
abbe
Abba
abating
abates
abater
abatements
abatement
abated
abate
abasing
abashing
abashes
abashed
abash
abases
abasements
abasement
abased
abase
DROP TABLE test.t1;
